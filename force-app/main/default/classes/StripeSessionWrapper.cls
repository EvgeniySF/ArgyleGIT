//
// Generated by JSON2Apex http://json2apex.herokuapp.com/
//
// The supplied json has fields with names that are not valid in apex
// and so can only be parsed with explicitly generated code, this option
// was auto selected for you.

public class StripeSessionWrapper {

	public class Total_details {
		public Integer amount_discount {get;set;} 
		public Integer amount_tax {get;set;} 

		public Total_details(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'amount_discount') {
							amount_discount = parser.getIntegerValue();
						} else if (text == 'amount_tax') {
							amount_tax = parser.getIntegerValue();
						} else {
							System.debug(LoggingLevel.WARN, 'Total_details consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Metadata {

		public Metadata(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						{
							System.debug(LoggingLevel.WARN, 'Metadata consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public String id {get;set;} 
	public String object_Z {get;set;} // in json: object
	public Object allow_promotion_codes {get;set;} 
	public Integer amount_subtotal {get;set;} 
	public Integer amount_total {get;set;} 
	public Object billing_address_collection {get;set;} 
	public String cancel_url {get;set;} 
	public Object client_reference_id {get;set;} 
	public String currencyCustom {get;set;} 
	public String customer {get;set;} 
	public String customer_email {get;set;} 
	public Boolean livemode {get;set;} 
	public Object locale {get;set;} 
	public Metadata metadata {get;set;} 
	public String mode {get;set;} 
	public String payment_intent {get;set;} 
	public List<String> payment_method_types {get;set;} 
	public Object setup_intent {get;set;} 
	public Object shipping {get;set;} 
	public Object shipping_address_collection {get;set;} 
	public Object submit_type {get;set;} 
	public Object subscription {get;set;} 
	public String success_url {get;set;} 
	public Total_details total_details {get;set;} 

	public StripeSessionWrapper(JSONParser parser) {
		while (parser.nextToken() != System.JSONToken.END_OBJECT) {
			if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
				String text = parser.getText();
				if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
					if (text == 'id') {
						id = parser.getText();
					} else if (text == 'object') {
						object_Z = parser.getText();
					} else if (text == 'allow_promotion_codes') {
						allow_promotion_codes = parser.readValueAs(Object.class);
					} else if (text == 'amount_subtotal') {
						amount_subtotal = parser.getIntegerValue();
					} else if (text == 'amount_total') {
						amount_total = parser.getIntegerValue();
					} else if (text == 'billing_address_collection') {
						billing_address_collection = parser.readValueAs(Object.class);
					} else if (text == 'cancel_url') {
						cancel_url = parser.getText();
					} else if (text == 'client_reference_id') {
						client_reference_id = parser.readValueAs(Object.class);
					} else if (text == 'currency') {
						currencyCustom = parser.getText();
					} else if (text == 'customer') {
						customer = parser.getText();
					} else if (text == 'customer_email') {
						customer_email = parser.getText();
					} else if (text == 'livemode') {
						livemode = parser.getBooleanValue();
					} else if (text == 'locale') {
						locale = parser.readValueAs(Object.class);
					} else if (text == 'metadata') {
						metadata = new Metadata(parser);
					} else if (text == 'mode') {
						mode = parser.getText();
					} else if (text == 'payment_intent') {
						payment_intent = parser.getText();
					} else if (text == 'payment_method_types') {
						payment_method_types = arrayOfString(parser);
					} else if (text == 'setup_intent') {
						setup_intent = parser.readValueAs(Object.class);
					} else if (text == 'shipping') {
						shipping = parser.readValueAs(Object.class);
					} else if (text == 'shipping_address_collection') {
						shipping_address_collection = parser.readValueAs(Object.class);
					} else if (text == 'submit_type') {
						submit_type = parser.readValueAs(Object.class);
					} else if (text == 'subscription') {
						subscription = parser.readValueAs(Object.class);
					} else if (text == 'success_url') {
						success_url = parser.getText();
					} else if (text == 'total_details') {
						total_details = new Total_details(parser);
					} else {
						System.debug(LoggingLevel.WARN, 'StripeSessionWrapper consuming unrecognized property: '+text);
						consumeObject(parser);
					}
				}
			}
		}
	}
	
	
	public static StripeSessionWrapper parse(String json) {
		System.JSONParser parser = System.JSON.createParser(json);
		return new StripeSessionWrapper(parser);
	}
	
	public static void consumeObject(System.JSONParser parser) {
		Integer depth = 0;
		do {
			System.JSONToken curr = parser.getCurrentToken();
			if (curr == System.JSONToken.START_OBJECT || 
				curr == System.JSONToken.START_ARRAY) {
				depth++;
			} else if (curr == System.JSONToken.END_OBJECT ||
				curr == System.JSONToken.END_ARRAY) {
				depth--;
			}
		} while (depth > 0 && parser.nextToken() != null);
	}
	





    private static List<String> arrayOfString(System.JSONParser p) {
        List<String> res = new List<String>();
        if (p.getCurrentToken() == null) p.nextToken();
        while (p.nextToken() != System.JSONToken.END_ARRAY) {
            res.add(p.getText());
        }
        return res;
    }




}